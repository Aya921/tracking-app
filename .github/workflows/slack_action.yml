name: Slack Notifications

on:
  push:
    branches:
      - "**"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
      - closed
      - merged
  workflow_run:
    workflows:
      - "Validate Branch Name"
      - "Firebase Distribution"
      - "Flutter Linting"
      - "Validate PR Title"
      - "SonarQube Analysis"
      - "Validate unit testing"
    types:
      - completed

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Determine Event Info
        id: info
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            COMMIT_MSG="${{ github.event.head_commit.message }}"
            echo "message=üöÄ *Push Event*\n‚Ä¢ Repo: *${{ github.repository }}*\n‚Ä¢ Branch: *${{ github.ref_name }}*\n‚Ä¢ Actor: *${{ github.actor }}*\n‚Ä¢ Commit: <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>\n‚Ä¢ Message: ${COMMIT_MSG}" >> $GITHUB_OUTPUT
            echo "color=#439FE0" >> $GITHUB_OUTPUT

          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_ACTION="${{ github.event.action }}"
            PR_NUMBER="${{ github.event.number }}"
            PR_HEAD="${{ github.event.pull_request.head.ref }}"
            PR_BASE="${{ github.event.pull_request.base.ref }}"
            PR_ACTOR="${{ github.event.pull_request.user.login }}"

            if [ "$PR_ACTION" == "closed" ] && [ "${{ github.event.pull_request.merged }}" == "true" ]; then
              EMOJI="‚úÖ"
              STATUS="merged"
              COLOR="#2eb886"
            elif [ "$PR_ACTION" == "closed" ]; then
              EMOJI="üî¥"
              STATUS="closed"
              COLOR="#e01e5a"
            else
              EMOJI="üîÄ"
              STATUS=$PR_ACTION
              COLOR="#6f42c1"
            fi

            echo "message=${EMOJI} *Pull Request ${STATUS}*\n‚Ä¢ Repo: *${{ github.repository }}*\n‚Ä¢ PR: <${{ github.event.pull_request.html_url }}|#${PR_NUMBER}>\n‚Ä¢ From: *${PR_HEAD}* ‚Üí To: *${PR_BASE}*\n‚Ä¢ Actor: *${PR_ACTOR}*" >> $GITHUB_OUTPUT
            echo "color=$COLOR" >> $GITHUB_OUTPUT

          elif [ "${{ github.event_name }}" == "workflow_run" ]; then
            CONCLUSION="${{ github.event.workflow_run.conclusion }}"
            if [ "$CONCLUSION" == "success" ]; then
              EMOJI="‚úÖ"
              COLOR="#36a64f"
            elif [ "$CONCLUSION" == "failure" ]; then
              EMOJI="üî¥"
              COLOR="#FF0000"
            elif [ "$CONCLUSION" == "cancelled" ]; then
              EMOJI="‚ö™"
              COLOR="#AAAAAA"
            else
              EMOJI="‚ùì"
              COLOR="#808080"
            fi
            echo "message=${EMOJI} *Workflow:* \`${{ github.event.workflow_run.display_title }}\`\n‚Ä¢ Repo: *${{ github.repository }}*\n‚Ä¢ Status: *${CONCLUSION}*\n‚Ä¢ Branch: *${{ github.event.workflow_run.head_branch }}*\n‚Ä¢ Actor: *${{ github.event.workflow_run.actor.login }}*\n‚û°Ô∏è <${{ github.event.workflow_run.html_url }}|View Logs>" >> $GITHUB_OUTPUT
            echo "color=$COLOR" >> $GITHUB_OUTPUT

          else
            echo "message=‚ùì Unknown event: ${{ github.event_name }}" >> $GITHUB_OUTPUT
            echo "color=#808080" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack Notification
        run: |
          COLOR="${{ steps.info.outputs.color || '#439FE0' }}"
          curl -X POST -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
          -H "Content-type: application/json" \
          --data "{
            \"channel\": \"C09GFR4UP3N\",
            \"attachments\": [
              {
                \"color\": \"${COLOR}\",
                \"blocks\": [
                  { \"type\": \"divider\" },
                  {
                    \"type\": \"section\",
                    \"text\": {
                      \"type\": \"mrkdwn\",
                      \"text\": \"${{ steps.info.outputs.message }}\"
                    }
                  },
                  { \"type\": \"divider\" }
                ]
              }
            ]
          }" \
          https://slack.com/api/chat.postMessage
